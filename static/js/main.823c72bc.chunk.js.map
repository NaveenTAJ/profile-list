{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","profiles","map","item","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filterProfiles","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHXC,EAAW,SAACR,GACvB,OACA,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAoBP,QAASO,GAAlBA,EAAKN,UCJtCO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCDG,E,kDApCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAEf,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBANT,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACV,SAAWoB,S,oBAO3C,WAAU,IAAD,EACyBC,KAAKP,MAA9Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACXW,EAAiBtB,EAASuB,QAC9B,SAAArB,GAAI,OAAIA,EAAKL,KAAK2B,cAAcC,SAASd,EAAYa,kBAEvD,OACA,sBAAKhC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUL,SAAUsB,W,GA/BRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.823c72bc.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\nexport const Card = (props) => {\n  return (\n    <div className='card-container'>\n      <img alt='profiles' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './card-list.styles.css'\nimport {Card} from '../card/card';\n\nexport const CardList = (props) => {\n  return (\n  <div className='card-list'>\n      {props.profiles.map(item => (<Card key={item.id} monster={item}  />))}\n  </div>);\n}\n","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n  return (\n    <input\n      className='search'\n      type='search'\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list'\nimport { SearchBox } from './components/search-box/search-box';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      profiles: [],\n      searchField: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  };\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users/')\n    .then(response => response.json())\n    .then(users => this.setState({profiles : users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const {profiles, searchField} = this.state;\n    const filterProfiles = profiles.filter(\n      item => item.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n    <div className='App'>\n      <h1>Profile list</h1>\n      <SearchBox\n        placeholder='Search profiles'\n        handleChange={this.handleChange}\n      />\n      <CardList profiles={filterProfiles} />\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}